calibrate range for sena dongle
migrate away from dbus/test-discovery
do we need to send status with aggressive_rssi?

add in a passive le mode
add in a passive classic mode
when ubertooth is available, specifically detect inquiries
add support for ubertooth index

refactor pass & code cleanup
extend tests a bit

Some stuff to do
* handle alt UUIDs which contain paren
* rate limit incoming RSSIs to 1 per timeframe
* Investigate duplicate classic_features_bitmaps...
* catch bluez chunk start lines by number instead of randomly abbreviated header

* add summary rake tasks to extract data from CLI after CUI is not running or from daemon mode service. 


```
W, [2016-01-27T15:51:44.838857 #18723]  WARN -- : 00:61:71:D0:E1:EF multiple values detected for classic_features_bitmap: ["0xbf 0xfe 0xcf 0xfe 0xdb 0xff 0x7b 0x87", "0x07 0x00 0x00 0x00 0x00 0x00 0x00 0x00", "0x000002a8"]. Using first value...
```
^^ this looks severely like we are missing a (most likely le) start block, because that looks like a classic features bitmap colliding with an le one.

We should lookup 16 bit uuid's as they are assigned:
- https://www.bluetooth.com/specifications/assigned-numbers/16-bit-uuids-for-members
- https://www.bluetooth.com/specifications/assigned-numbers/16-bit-uuids-for-sdos

We should look up more things which are assigned
- https://www.bluetooth.com/specifications/assigned-numbers

Some le uuids
https://gitlab.com/sdalu/ruby-ble
